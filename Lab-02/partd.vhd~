
-- partd.vhd
-------------------------------------------------------------------------
-- DESCRIPTION: This file contains an implementation of an edge-triggered
-- flip-flop with parallel access and reset.
--
--
-- NOTES:
-- 9/07/08 by JAZ::Design created.
-------------------------------------------------------------------------

library IEEE;
use IEEE.std_logic_1164.all;

entity partd is

  generic(N : integer := 32; M : integer := 5);
  port(	input        : in std_logic_vector(M-1 downto 0);     -- decoder 5 bit input
       	output        : in std_logic_vector(N-1 downto 0));     			-- 32 bit output);

end partd;

architecture dflow of partd is

begin
	with M select N <=
  		"00000000000000000000000000000001" when "00000",
		"00000000000000000000000000000101" when "00001",
		"00000000000000000000000000011001" when "00010",
		"00000000000000000000000001111101" when "00011",
  		"00000000000000000000001001110001" when "00100",
		"00000000000000000000110000110101" when "00101",
		"00000000000000000011110100001001" when "00110",
		"00000000000000010011000100101101" when "00111",
  		"00000000000001011111010111100001" when "01000",
		"00000000000111011100110101100101" when "01001",
		"00000000100101010000001011111001" when "01010",
		"00000000010010101000000110001001" when "01011",
  		"" when "01100",
		"" when "01101",
		"" when "01110",
		"" when "01111",
  		"" when "10000",
		"" when "10001",
		"" when "10010",
		"" when "10011",
  		"" when "10100",
		"" when "10101",
		"" when "10110",
		"" when "10111",
  		"" when "11000",
		"" when "11001",
		"" when "11010",
		"" when "11011",
  		"" when "11100",
		"" when "11101",
		"" when "11110",
		"" when "11111";

end process;
  
end dflow;
